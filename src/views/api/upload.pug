section.sidebar.show
    .search 
        .col-lg-8.col-md-8
            .input-group
                h1 Upload files
    .user-sidebar.library-view
        .panel.upload
            a.list-group-item.custom-file-upload(style='width: 50%; text-align: center; margin: 5px auto;')
                input(name="import", type="file")
            .progress
                .progress-bar(role="progressbar", aria-valuenow="0", aria-valuemin="0", aria-valuemax="100", style="width: 0%;")
        
        .panel(style="margin: 5px;")
            h2 Uploaded files:
            if directory || directory === undefined
                .row(style='width: 80%; margin: 5px auto;')
                    .col-md-8
                        h3= 'Set folder ' + (directory ? '/'.concat(directory) : '/') + ' public'
                    .col-md-4(style='font-size:1rem;')
                        .toggle-icon.icon.blue(style='position: absolute;right: 0;top: 23px;')
                            input(name="setPublic", type="checkbox", value=isShared)
                            .handle
                                .glyphicon.glyphicon-gift
            .imported-files.list-group(style="width: 80%; margin: 5px auto;")
                if files
                    .row.list-group-item(style="text-align: center; font-weight: bold;")
                        .col-md-1
                            span Type
                        .col-md-9
                            span Name
                        .col-md-1
                            span Delete
                        .col-md-1
                            span Extract
                    for file in files
                        - var filename = file
                        - var target="_self"
                        if directory
                            - filename = file
                            - file=directory + "/" + file
                        if file.indexOf('.')!==-1 
                            - target = "_blank"
                        .row.list-group-item
                            .col-md-1
                                if (file.indexOf('.jpeg')!==-1 || file.indexOf('.JPEG')!==-1  ||file.indexOf('.jpg')!==-1 || file.indexOf('.JPG')!==-1 || file.indexOf('.PNG')!==-1 || file.indexOf('.png')!==-1 || file.indexOf('.gif')!==-1 || file.indexOf('.GIF')!==-1)
                                    img(src="/upload/files/imported/"+ file, style="height: 30px;")
                                else if (file.indexOf('.mp3')!==-1 || file.indexOf('.MP3')!==-1 || file.indexOf('.ogg')!==-1 || file.indexOf('.OGG')!==-1 || file.indexOf('.flac')!==-1 || file.indexOf('.flac')!==-1)
                                    i.fal.fa-headphones
                                else if (file.indexOf('.zip')!==-1 || file.indexOf('.ZIP')!==-1 || file.indexOf('.tar')!==-1 || file.indexOf('.TAR')!==-1)
                                    i.fal.fa-file-archive(style="font-size: 30px;")
                                else
                                    i.fal.fa-file(style="font-size: 30px;")
                            .col-md-9.file.imported-file
                                a.imported-filename(href="/upload/files/imported/" + file, target=target)=filename
                            .col-md-1(style="text-align: center;")
                                a.delete.imported-filename(href="/upload/imported/" + file + "/delete")
                                    i.fa.fa-trash
                            .col-md-1(style="text-align: center;")
                                if (file.indexOf('.zip')!==-1 || file.indexOf('.ZIP')!==-1 || file.indexOf('.tar')!==-1 || file.indexOf('.TAR')!==-1)
                                    a.extract.imported-filename(title="extract", href="/upload/imported/" + file + "/extract")
                                        i.fal.fa-file-archive


script.
  function initView(){
    $('.toggle-icon').on('click', function () {
      $(this).children('input').val(!$(this).hasClass('on'));
      var value = !$(this).hasClass('on');
      console.log("visibility changed to: ", value);
      console.log("POST: " + "/api/#{directory}?value=" + value);
      $.post("/api/files/set-properties/imported/#{directory}?public=" + value);
      if ($(this).hasClass('on')) {
        return $(this).removeClass('on');
      } else {
        return $(this).addClass('on');
      }
    });

    $.each($("input[type='checkbox']"), function(index, val){
      if ($(val).val() === "true"){
        $(this).parents(".toggle-icon.icon").addClass('on');
      }
    });
    $('input[name=import]').customFile("Importer un fichier");
    $("input[name=import]").liteUploader({
      script: "/upload/file"
    })
    .on("lu:progress", function (e, percentage) {
        $(".progress-bar").css({
            "width" : percentage + "%"
        });
        $(".progress-bar").text("Uploading: " + percentage + "%");
    })
    .on("lu:success", function (e, response) {
        $(".progress-bar").text("Uploaded: refreshing import list");
        setTimeout(function(){
            window.location.reload();
        }, 1000);
    });
  }
